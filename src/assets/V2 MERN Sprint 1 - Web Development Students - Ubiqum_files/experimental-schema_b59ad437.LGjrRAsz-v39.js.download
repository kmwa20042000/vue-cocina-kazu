(window.webpackJsonp=window.webpackJsonp||[]).push([["experimental-schema~b59ad437"],{"//nZ":function(e,n,t){var r=t("QwI6"),i=t("cH1A")((function(e,n){return null==e?{}:r(e,n)}));e.exports=i},"6kor":function(e,n,t){"use strict";t.r(n);var r=t("nBN+"),i=t("gshF"),a=t("kC4U");var o=t("NnCn");var s=t("94Z3");const l=e=>{const n=e.ok||409===e.status;return e.json().then(e=>({isAdmin:n,isEligible:!!e.domain}))};var c=t("pkwY");function p(e={}){return Object(c.a)({id:"".concat(e.key,":").concat(e.link,":").concat(e.label)},e,{__typename:"ExperimentalApplication"})}function m({query:e,variables:n}){return Object(a.a)("/wiki/rest/graph",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({variables:n,query:e})}).then(e=>e.json())}const d=(e,n)=>{var t;return(null!=(t=n)&&null!=(t=t.attrs)?t.extensionKey:t)===e?[n]:n.content?n.content.reduce((n,t)=>n.concat(d(e,t)),[]):[]},u=(e,n,t,r)=>m({query:"\n      query excerptIncludeTargetPageQuery(\n        $contentTitle: String!\n        $spaceKey: String!\n        $type: String!\n      ) {\n        content(title: $contentTitle, spaceKey: $spaceKey, type: $type) {\n          nodes {\n            id\n            body {\n              atlas_doc_format {\n                value\n              }\n            }\n          }\n        }\n      }\n    ",variables:{contentTitle:n,spaceKey:t,type:r}}),g=e=>null!==e.match(/^\/\d{4}\/\d{2}\/\d{2}\//),S=e=>-1!==e.indexOf(":"),y="/yyyy/mm/dd/".length,h=e=>e.slice(y),x=e=>e.slice(e.indexOf(":")+1),E=e=>e.slice(0,e.indexOf(":")),f=(e,n,t)=>m({query:'\n      query consumerSpaceQuery($contentId: ID!) {\n        content(id: $contentId, status: ["current", "draft"]) {\n          nodes {\n            id\n            space {\n              key\n            }\n          }\n        }\n      }\n    ',variables:{contentId:e}}).then(e=>{var t,r;const i=null!=(r=n)&&null!=(r=r[""])?r.value:r,a=null!=(t=e)&&null!=(t=t.data)&&null!=(t=t.content)&&null!=(t=t.nodes)&&null!=(t=t[0])&&null!=(t=t.space)?t.key:t;return Promise.all([u(0,i,a,"page"),g(i)?u(0,h(i),a,"blogpost"):Promise.resolve(null),S(i)?u(0,x(i),E(i),"page"):Promise.resolve(null),S(i)&&g(x(i))?u(0,h(x(i)),E(i),"blogpost"):Promise.resolve(null)]).then(e=>{var n;let t=null,r=null;if(e.some(e=>{var n,i;if(t=(null!=(n=e)&&null!=(n=n.data)&&null!=(n=n.content)&&null!=(n=n.nodes)&&null!=(n=n[0])&&null!=(n=n.body)&&null!=(n=n.atlas_doc_format)?n.value:n)||null,t)return r=(null!=(i=e)&&null!=(i=i.data)&&null!=(i=i.content)&&null!=(i=i.nodes)&&null!=(i=i[0])?i.id:i)||null,!0}),!t)return{payload:null,contentId:null};const i=JSON.parse(t),a=null!=(n=d("excerpt",i))&&null!=(n=n[0])?n.content:n;return{payload:a?JSON.stringify(a):null,contentId:r}})});var b=t("Wb2A");const I=e=>{if(e instanceof s.a){const{response:n}=e;if(401===n.status)return n}throw e};var C=t("//nZ"),k=t.n(C);const T={nodes:[]};function w(e){return{id:e.id||"",body:e.body||"",author:{id:e.authorAccountId||"",accountId:e.authorAccountId||"",displayName:e.authorDisplayName||"",profilePicture:{path:e.authorAvatarUrl||""}},friendlyLastModified:e.lastModificationDate||""}}var j=t("7M9M");const v=({ok:e,status:n})=>({success:e,responseStatus:n});const P=e=>{var n,t,r;const i=(null!=(r=e)&&null!=(r=r._links)?r.context:r)||"",a=(null!=(t=e)&&null!=(t=t._links)?t.editui:t)||"";return(null!=(n=j.RESUME_DRAFT_LEGACY.match(i+a))&&null!=(n=n.query)?n.draftShareId:n)||""};var O=t("uZih"),D=t.n(O);const R=e=>{try{return JSON.parse(e)}catch(e){return null}};var B=t("prCu"),U=t.n(B);var N=t("7uJl"),A=t.n(N),K=t("/FQd");const L=({content:e})=>{const n=D()(e,["baseUrl","container"]);return Object(c.a)({},n,{title:A()(e.title),content:Object(c.a)({},n.content,{space:{name:e.container&&e.container.title,links:{webui:e.container&&e.container.displayUrl}}})})},F=e=>{const n=[];if(e){if(e.spaceKeys&&n.push({"@type":"spaces",spaceKeys:e.spaceKeys}),e.contributors&&n.push({"@type":"contributors",accountIds:e.contributors}),e.date){const{from:t,to:r}=e.date;n.push({"@type":"lastModified",from:t,to:r})}return n}};const _=e=>{if(e instanceof s.a)return e.response;throw e};const M={Query:{experimentalAboutConfluence:function(){return Object(a.a)("/wiki/aboutconfluence.action",{method:"GET",headers:{"Content-Type":"application/json"}}).then(e=>e.text()).then(e=>({html:e,__typename:"ExperimentalAboutConfluence"}))},experimentalBlueprints:function(e,{spaceKey:n}){return n?Object(a.a)("/wiki/rest/create-dialog/1.0/blueprints/web-items?spaceKey=".concat(n),{method:"GET","Content-Type":"application/json"}).then(e=>e.json()).then((e=[])=>(e.forEach(e=>e.wizard=e.wizard||{}),{nodes:e,__typename:"ExperimentalBlueprints"})).catch(e=>{if(e instanceof o.a)throw e;throw new Error("experimentalBlueprints Error: ",e)}):Promise.reject(new Error("spaceKey is missing."))},experimentalContentDraftDiff:function(e,{contentId:n}){return Object(a.a)("/wiki/rest/tinymce/1/content/".concat(n,"/draft/diff/json"),{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"}}).then(e=>e.json()).catch(()=>({}))},experimentalDrsEligibility:function(e,{cloudId:n}){return n?Object(a.a)("/gateway/api/join-site-service/site/".concat(n,"/domainRestrictedSignupPromotion"),{method:"GET"}).then(l,e=>{if(e instanceof s.a)return l(e.response);throw e}):Promise.reject(new Error("cloudId is missing."))},experimentalGenerateSpaceKey:async function(e,{spaceName:n}){if(!n)throw new Error("space name is missing.");const t=await Object(a.a)("/wiki/rest/onboarding/1/space/generate?key=".concat(n),{method:"GET"}),{key:r}=await t.json();return{key:r}},experimentalGetCompleteOnboarding:function(){return Object(a.a)("/wiki/rest/onboarding/1/store?key=onboarding-state:introWorkflow",{method:"GET",headers:{"Content-Type":"application/json"}}).then(e=>e.json(),e=>{if(e instanceof s.a&&401==e.response.status)throw new Error("unauthorized");throw e}).then(({value:e})=>({complete:"__complete__"===e}))},experimentalKeyboardShortcutsStatus:function(){return Object(a.a)("/wiki/rest/confluenceshortcuts/latest/enabled",{method:"GET"}).then(e=>e.text()).then(e=>({enabled:"true"===e}))},experimentalLinkedApplications:function(){return Object(a.a)("/wiki/rest/menu/latest/appswitcher",{method:"GET","Content-Type":"application/json"}).then(e=>e.json()).then((e=[])=>({linkedApplications:e.map(p),__typename:"ExperimentalApplicationList"}))},experimentalLongTask:(e,{taskId:n})=>Object(a.a)("/wiki/rest/api/longtask/".concat(n),{cache:"no-cache",headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{var n,t,r,i,a,o;return{id:(null!=(o=e)?o.id:o)||"",elapsedTime:(null!=(a=e)?a.elapsedTime:a)||0,percentageComplete:(null!=(i=e)?i.percentageComplete:i)||0,successful:(null!=(r=e)?r.successful:r)||!1,statusCode:(null!=(t=e)?t.statusCode:t)||200,messages:(null!=(n=e)?n.messages:n)||[]}}),experimentalMacroMetadata:(e,n,{monolithClient:t})=>{const{contentId:r,macroNode:{extensionKey:i,parameters:{macroParams:a}}}=n;switch(i){case"excerpt-include":return f(r,JSON.parse(a),t);default:return Promise.resolve(null)}},experimentalMediaConfig:function(){return Object(a.a)("/wiki/rest/internals/1.0/media/config",{method:"GET",headers:{"Content-Type":"application/json"}}).then(e=>e.json()).catch(()=>({}))},experimentalPromotedSpaces:function(e,n){const t=n&&n.promotedSpacesLimit||10,r=n&&n.otherSpacesLimit||10,i=n&&n.promotedSpaceKey||"";return Object(a.a)("/wiki/rest/create-dialog/1.0/spaces?promotedSpacesLimit=".concat(t,"&otherSpacesLimit=").concat(r,"&promotedSpaceKey=").concat(i),{method:"GET","Content-Type":"application/json"}).then(e=>e.json()).then(e=>(e.promotedSpaces&&e.promotedSpaces.spaces||[]).concat(e.otherSpaces&&e.otherSpaces.spaces||[])).then(e=>({nodes:e,__typename:"ExperimentalPromotedSpace"})).catch(e=>{if(e instanceof o.a)throw e;throw new Error("experimentalPromotedSpaces Error: ",e)})},experimentalRecentContainers:b.a,experimentalSiteSignUpSettings:function(e,{cloudId:n}){return n?Object(a.a)("/gateway/api/site/".concat(n,"/signup-settings"),{method:"GET"}).then(e=>e.json()):Promise.reject(new Error("cloudId is missing."))},experimentalSkipOnboarding:async function(){const e=Object(a.a)("/wiki/rest/onboarding/1/store?key=completed-jira-onboarding",{method:"GET",headers:{"Content-Type":"application/json"}}).catch(I),n=Object(a.a)("/wiki/rest/onboarding/1/store/global?key=is-first-space-created",{method:"GET",headers:{"Content-Type":"application/json"}}).catch(I),[t,r]=await Promise.all([e,n]);if(401===t.status||401===r.status)throw new Error("unauthorized");const i=await t.json(),o=await r.json();return{completedJiraOnboarding:"true"===i.value,isFirstSpaceCreated:"true"===o.value}},experimentalSpace:(e,{spaceKey:n})=>Object(a.a)("/wiki/rest/api/space/".concat(n,"/settings"),{cache:"no-cache",headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{var n;return{statusCode:(null!=(n=e)?n.statusCode:n)||200}}).catch(e=>({statusCode:e instanceof s.a?e.response.status:404})),experimentalSynchronySnapshot:function(e,{jwt:n,url:r,entityId:i}){return new Promise((e,a)=>{t.e("graphql.prosemirror-synchrony-plugin.content-reconciler~4134d62c").then(t.bind(null,"pQSp")).then(({requestSnapshot:t})=>{t({jwt:n,url:r,entityId:i}).then(n=>{if(n.ok)n.json().then(n=>e({adf:JSON.stringify(n.state.value.adf),title:n.state.value.title}));else{if(404===n.status||401===n.status)return e({adf:null,title:null});a()}},a)})})},experimentalUserPermissions:function(e,{cloudId:n}){const t=e=>Object(a.a)("/gateway/api/permissions/permitted",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({permissionId:e,resourceId:"ari:cloud:platform::site/".concat(n)})}).then(e=>e.json());return Promise.all([t("add-products"),t("invite-users")]).then(e=>({canAddProducts:e[0].permitted,canInviteUsers:e[1].permitted}),()=>({canAddProducts:!1,canInviteUsers:!1}))},experimentalCrossProductAdvancedSearch:async function(e,{query:n,searchSession:r,first:i,after:o,scope:s,filters:l}){const{getApolloClient:c}=await Promise.resolve().then(t.bind(null,"8TdO"));return Object(K.b)(c()).then(e=>{const t=e.cloudId;return Object(a.a)("/gateway/api/xpsearch-aggregator/search/v2/advanced",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:n,cloudId:t,scope:s||"confluence.page,blogpost,attachment,space",sessionAttributes:{experience:"confluence.advancedSearch",searchSession:r},filters:F(l),pagination:{limit:i,token:o}})})}).then(e=>e.json()).then(e=>{var n,t,r,i,a;return{nodes:((null!=(a=e)&&null!=(a=a.results)?a.items:a)||[]).map(L),pageInfo:{hasNextPage:!!(null!=(i=e)&&null!=(i=i.results)&&null!=(i=i.pagination)?i.next:i),endCursor:null!=(r=e)&&null!=(r=r.results)&&null!=(r=r.pagination)?r.next:r,totalCount:null!=(t=e)&&null!=(t=t.results)?t.totalCount:t},abTest:(null!=(n=e)&&null!=(n=n.results)?n.abTest:n)||{}}})},experimentalFetchShareableTeams:function(e,{queryString:n,limit:t}){return Object(a.a)("/gateway/api/teams/v2/search?q=".concat(encodeURIComponent(n),"&limit=").concat(t),{method:"GET",headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>({nodes:e}))},experimentalResolvedInlineComments:async function(e,{contentId:n}){if(!n)return T;let t;try{t=await(await Object(a.a)("/wiki/rest/inlinecomments/1.0/comments?containerId=".concat(n),{method:"GET"})).json()}catch(e){}if(!Array.isArray(t))return T;const r=(await Promise.all(t.map(e=>async function(e){let n=[];try{n=await(await Object(a.a)("/wiki/rest/inlinecomments/1.0/comments/".concat(e,"/replies"),{method:"GET"})).json()}catch(e){}return[e,n.map(w)]}(e.id)))).reduce((e,[n,t])=>(e[n]=t,e),{});return{nodes:t.filter(e=>Boolean(e.resolveProperties&&e.resolveProperties.resolved&&e.resolveProperties.resolvedTime)).sort((e,n)=>n.resolveProperties.resolvedTime-e.resolveProperties.resolvedTime).map(e=>Object(c.a)({},w(e),{location:{hasResolvePermission:Boolean(e.hasResolvePermission),resolveProperties:k()(e.resolveProperties,["resolvedUser","resolvedFriendlyDate","resolvedByDangling"]),inlineMarkerRef:e.markerRef||"",inlineText:e.originalSelection||""},replies:{nodes:r[e.id]}}))}},experimentalContentTypes:()=>Object(a.a)("".concat(j.CONTEXT_PATH,"/rest/cql/contenttypes"),{method:"GET"}).then(e=>e.json()).then(e=>({nodes:e.map(({label:e,type:n})=>({label:e,value:n}))})).catch(()=>({})),experimentalEditorBreadcrumbs:function(e,{contentId:n}){return n?Object(a.a)("/wiki/pages/breadcrumb.action?pageId=".concat(n),{method:"GET","Content-Type":"application/json"}).then(e=>e.json()).then((e={})=>({breadcrumbs:e.breadcrumbs,__typename:"ExperimentalEditorBreadcrumbs"})).catch(e=>{throw new Error("experimentalEditorBreadcrumbs Error: ",e)}):Promise.reject(new Error("contentId is missing."))},experimentalUploadToken:function(e,{contentId:n}){return Object(a.a)("/wiki/rest/internals/1.0/media/uploadTokenData?contentId=".concat(n),{method:"GET",headers:{"Content-Type":"application/json"}}).then(async e=>{const t=await e.json();return{token:{value:t.token},configuration:t.config,collection:t.collectionNames[n],mediaPickerUserToken:t.mediaPickerUserToken}}).catch(()=>({}))},experimentalQuickReload:function(e,n){const{contentId:t,since:r}=n,i=Date.now();return Object(a.a)("/wiki/rest/quickreload/latest/".concat(t,"/?since=").concat(r,"&source=next2"),{method:"GET",headers:{"Content-Type":"application/json"}}).then(e=>{if(204===e.status)return{time:i,comments:[],editorForPage:null};if(200===e.status)return e.json().then(e=>({time:e.time,comments:(e.comments||[]).map(({comment:e,commenter:n})=>({comment:{id:e.id,author:{displayName:n.displayName,accountId:n.accountId}}})),editorForPage:e.page?{displayName:e.page.editor.displayName,accountId:e.page.editor.accountId}:null}));throw new Error("bad status: ".concat(e.status))})},experimentalConvertStorageContentToADF:function(e,{cxhtml:n,contentId:t}){const r={representation:"storage",value:n};return Object(a.a)("/wiki/rest/api/contentbody/convert/atlas_doc_format?contentIdContext=".concat(t),{method:"POST",body:JSON.stringify(r),credentials:"include",headers:{"Content-Type":"application/json"}}).then(async e=>{if(e.ok&&200===e.status){return{value:(await e.json()).value}}},e=>{throw Error("Conversion HTTP error, status = ".concat(e.status,', message = "').concat(e.statusText,'"'))})}},Mutation:{experimentalAddPersonalSpaceLink:function(e,{spaceUserKey:n}){return Object(a.a)("/wiki/rest/create-dialog/1.0/space-blueprint/create-personal-space?favorite=true",{method:"POST",body:JSON.stringify({spaceUserKey:n}),headers:{"Content-Type":"application/json"}}).then(()=>!0,()=>!1)},experimentalAddCustomizedPersonalSpace:function(e,{spaceName:n}){return Object(a.a)("/wiki/rest/create-dialog/1.0/space-blueprint/create-custom-name-personal-space?favorite=true",{method:"POST",body:JSON.stringify({name:n}),headers:{"Content-Type":"application/json"}}).then(()=>({result:!0}),()=>({result:!1}))},experimentalAddSpaceLink:function(e,{id:n,spaceKey:t}){return Object(a.a)("/wiki/rest/ia/1.0/link/".concat(n,"/show"),{method:"POST",body:JSON.stringify({spaceKey:t}),headers:{"Content-Type":"application/json"}}).then(()=>!0)},experimentalCompleteOnboarding:function(){return Object(a.a)("/wiki/rest/onboarding/1/store",{method:"PUT",body:JSON.stringify({key:"onboarding-state:introWorkflow",value:"__complete__"}),headers:{"Content-Type":"application/json"}}).then(()=>({complete:!0}))},experimentalCreateDemoSpace:async function(e,{spaceKey:n,spaceName:t}){if(!n)throw new Error("spaceKey is missing.");if(!t)throw new Error("spaceName is missing.");let r=null;try{const e=await Object(a.a)("/wiki/rest/onboarding/1/space",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({key:n,name:t})});({key:r}=await e.json())}catch(e){if(e instanceof o.a)throw e;throw new Error("/space ".concat(e.message))}let i=null;try{const e=await Object(a.a)("/wiki/rest/onboarding/1/draft/generate?spaceKey=".concat(r),{method:"GET"});i=await e.json()}catch(e){if(e instanceof o.a)throw e;throw new Error("/draft/generate ".concat(e.message))}return{key:r,draftId:i}},experimentalDeleteComment:function(e,{contentId:n}){return Object(a.a)("/wiki/rest/api/content/".concat(n,"/?status=current"),{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json"}}).then(({status:e})=>({contentId:n,statusCode:e}))},experimentalDeleteContentVersion:function(e,{contentId:n,versionNumber:t}){return Object(a.a)("/wiki/rest/api/content/".concat(n,"/version/").concat(t),{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json"}}).then(()=>!0,e=>{if(e instanceof s.a)return!1;throw e})},experimentalDisableKeyboardShortcuts:function(){return Object(a.a)("/wiki/rest/confluenceshortcuts/latest/enabled",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({enabled:!1})}).then(e=>e.json()).catch(()=>({enabled:!1})).then(e=>({enabled:e}))},experimentalEnableKeyboardShortcuts:function(){return Object(a.a)("/wiki/rest/confluenceshortcuts/latest/enabled",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({enabled:!0})}).then(e=>e.json()).catch(()=>({enabled:!1})).then(e=>({enabled:e}))},experimentalFavouriteSpace:function(e,{spaceKey:n}){return Object(a.a)("/wiki/rest/experimental/relation/user/current/favourite/toSpace/".concat(n),{method:"PUT"}).then(()=>({spaceKey:n}),e=>{if(e instanceof s.a)return!1;throw e})},experimentalFetchResumeDraftLink:function(e,{resumeDraftLink:n}){const t=e=>({links:{draftUrl:e&&e.redirected?e.url:""}});return Object(a.a)("/wiki/".concat(n),{headers:{"Content-Type":"application/json"}}).then(t,e=>t(e instanceof s.a&&e.response))},experimentalGrantAccess:function(e,{contentId:n,accessType:t,accountId:r}){return Object(a.a)("/wiki/rest/request-access/latest/page/restriction/".concat(n,"/grant/").concat(t),{method:"POST",headers:{"Content-Type":"application/json"},body:r}).then(v,e=>{if(e instanceof s.a)return v(e.response);throw e})},experimentalInviteUser:function(e,{cloudId:n,email:t,inviteContinueUrl:r}){if(!n)return Promise.reject(new Error("cloudId is missing."));if(!t)return Promise.reject(new Error("`email` argument is missing"));if(!r)return Promise.reject(new Error("`inviteContinueUrl` argument is missing"));const i="ari:cloud:confluence::site/".concat(n);return Object(a.a)("/gateway/api/invitations/invite",{method:"POST",body:JSON.stringify({users:[{email:t}],continueUrl:r,resources:[i]}),headers:{"Content-Type":"application/json"}}).catch(e=>{if(e instanceof s.a)return e.response;throw e}).then(e=>e.json().catch(e=>({jsonError:"JSON error: ".concat(e&&e.message)})).then(n=>{var t;const{jsonError:r,errors:a,errorType:o,code:s,message:l}=n,c=e.ok?null:"Invite returned status: ".concat(e.status,"; code: ").concat(s),p=c&&"User cannot invite themselves"===l?l:null,m=n[0],d=m&&m.results&&m.results[i]?null:"Missing result",u=o||(null!=(t=a)&&null!=(t=t[0])?t.message:t)||p||c||r||d;return u?Promise.reject(new Error(u)):{email:m.email,userId:m.id,results:{conf:m.results[i]}}}))},experimentalCreateBlankFabricPage:async function(e,{spaceKey:n,parentPage:t}){var r,i;const o={type:"page",status:"draft",metadata:{properties:{editor:{value:"v2"}}},space:{key:n}};t&&(o.ancestors=[{id:t}]);const s=await(await Object(a.a)("/wiki/rest/api/content",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)})).json();return{links:{draftUrl:j.EDIT_PAGE_V2.toUrl({contentType:"pages",spaceKey:null!=(i=s)&&null!=(i=i.space)?i.key:i,contentId:null!=(r=s)?r.id:r},{query:{draftShareId:P(s)}})}}},experimentalCreateFabricBlogpost:async function(e,{spaceKey:n}){var t;const r={type:"blogpost",status:"draft",metadata:{properties:{editor:{value:"v2"}}},space:{key:n}},i=null!=(t=await(await Object(a.a)("/wiki/rest/api/content",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)})).json())&&null!=(t=t._links)?t.editui:t;if(!i)throw new Error("Missing content draft url");return{links:{draftUrl:i}}},experimentalPublishPageAndBlog:function(e,{spaceKey:n,contentId:t,blueprintModuleCompleteKey:r,featureFlags:i}){const o="com.atlassian.confluence.plugins.confluence-create-content-plugin:create-blog-post"===r,s="com.atlassian.confluence.plugins.confluence-create-content-plugin:create-blank-page"===r,{fabricEditorForBlankPage:l,fabricEditorForBlankBlogpost:p}=JSON.parse(i),m={},d={type:o?"blogpost":"page",status:"draft",space:{key:n}};return(s&&l||o&&p)&&(m.metadata={properties:{editor:{value:"v2"}}}),t&&"no-parent-page"!==t&&!o&&(d.ancestors=[{id:t}]),Object(a.a)("/wiki/rest/api/content",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(Object(c.a)({},d,m))}).then(e=>e.json()).then(e=>{var n;const t=null!=(n=e)&&null!=(n=n._links)?n.editui:n;if(t)return t;throw new Error("Missing content draft url")}).then(e=>({links:{draftUrl:e}}))},experimentalPublishPageByBlueprint:function(e,{spaceKey:n,contentId:t,blueprint:r}){const i=(e=>D()(e,["__typename","wizard"]))(JSON.parse(r)),o={type:"page",status:"draft",space:{key:n}};return t&&"no-parent-page"!==t&&(o.ancestors=[{id:t}]),(({itemModuleCompleteKey:e})=>"com.atlassian.confluence.plugins.confluence-business-blueprints:meeting-notes-item"===e)(i)&&(i.spaceKey=n),Object(a.a)("/wiki/rest/create-dialog/1.0/content/blueprint/".concat(i.itemModuleCompleteKey,"/instance"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:Object(c.a)({},o),contentBlueprintSpec:{blueprintId:i.contentBlueprintId,context:i}})}).then(e=>e.json()).then(e=>{var n;const t=null!=(n=e)&&null!=(n=n.content)&&null!=(n=n._links)?n.editui:n;if(t)return t;throw new Error("Missing content draft url")}).then(e=>({links:{draftUrl:e}}))},experimentalPublishPageByTemplate:function(e,{spaceKey:n,contentId:t,blueprint:r,context:i,title:s}){const l=R(r),p=i&&R(i),m={type:"page",status:"draft",space:{key:n},title:s};return t&&"no-parent-page"!==t&&(m.ancestors=[{id:t}]),Object(a.a)("/wiki/rest/api/template/page/".concat(l.templateId,"/instance"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:Object(c.a)({},m),contentBlueprintSpec:{contentTemplateId:l.templateId,context:p||{}}})}).then(e=>e.json()).then(e=>{var n;const t=null!=(n=e)&&null!=(n=n.content)&&null!=(n=n._links)?n.editui:n;if(t)return t;throw new Error("Missing content draft url")}).then(e=>({links:{draftUrl:e}})).catch(e=>{if(e instanceof o.a)throw e;throw new Error("experimentalPublishPageByTemplate Error: ",e)})},experimentalRemoveSpaceLink:function(e,{id:n,spaceKey:t}){return Object(a.a)("/wiki/rest/ia/1.0/link/".concat(n,"/hide"),{method:"POST",body:JSON.stringify({spaceKey:t}),headers:{"Content-Type":"application/json"}}).then(()=>!0)},experimentalRequestAccess:function(e,{contentId:n,accessType:t}){return Object(a.a)("/wiki/rest/request-access/latest/page/restriction/".concat(n,"/request/").concat(t),{method:"POST",headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>({complete:!0,fullName:e.fullName}),()=>({complete:!1,fullName:null}))},experimentalRestoreContentVersion:function(e,{contentId:n,versionNumber:t,message:r}){return Object(a.a)("/wiki/rest/api/content/".concat(n,"/version"),{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({operationKey:"restore",params:{versionNumber:t,message:r}})}).then(e=>e.json()).then(()=>({restored:!0,__typename:"ExperimentalContentVersionRestored"}),()=>({restored:!1,__typename:"ExperimentalContentVersionRestored"}))},experimentalSaveComment:function(e,n){const{watch:t,html:r,uuid:i,contentId:o,commentId:s,requestType:l,captcha:c={}}=n.params;let p;switch(l){case"addComment":p="/wiki/rest/tinymce/1/content/".concat(o,"/comment");break;case"editComment":p="/wiki/rest/tinymce/1/content/".concat(o,"/comments/").concat(s);break;case"replyComment":p="/wiki/rest/tinymce/1/content/".concat(o,"/comments/").concat(s,"/comment")}const m={Accept:"application/json","Content-Type":"application/x-www-form-urlencoded; charset=UTF-8","X-Atlassian-Token":"no-check"};return c.id&&(m["X-Atlassian-Captcha-Id"]=c.id,m["X-Atlassian-Captcha-Response"]=c.response),Object(a.a)(p,{method:"POST",headers:m,body:U.a.stringify({watch:t,html:r,uuid:i})}).then(e=>e.json())},experimentalSetFeatureDiscovered:function(e,{featureKey:n,pluginKey:t}){return n&&t?Object(a.a)("/wiki/rest/feature-discovery/1.0/discovered/".concat(t,"/").concat(n),{method:"POST",headers:{"Content-Type":"application/json"}}).then(()=>({pluginKey:t,featureKey:n}),e=>Promise.reject("experimentalSetFeatureDiscovered: Caught REST error: ".concat(e))):Promise.reject(new Error("featureKey or pluginKey is missing."))},experimentalSubmitFeedbackCollector:function(e,{summary:n,description:t,component:r}){let i;const o={issues:[{fields:{project:{key:"CONFCLOUD"},summary:n,description:t,issuetype:{name:"Bug"},components:[{name:r}],security:{id:"10750"},customfield_17130:{id:"14432"}}}]};return Object(a.a)("/wiki/rest/createjiracontent/1.0/get-jira-servers",{method:"GET"}).then(e=>e.json()).then(e=>{const n=e.find(e=>e.url.includes("https://jira.atlassian.com"));if(!n)throw new Error("No JAC server available");return i=n.id,Object(a.a)("/wiki/rest/jira-integration/1.0/issues?applicationId=".concat(i),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}).then(e=>e.json()).then(e=>{var n;const{errors:t}=e,r=null!=(n=e)&&null!=(n=n.issues)&&null!=(n=n[0])?n.issue:n;if(t||!r){if(t.find(e=>"com.atlassian.integration.jira.JiraAuthenticationRequiredException"===e.exceptionName))return{id:null,key:null,self:null,authUrl:"/wiki/plugins/servlet/applinks/oauth/login-dance/authorize?applicationLinkID=".concat(i)};const e=t.map(e=>{var n;return Object(c.a)({},(null!=(n=e)&&null!=(n=n.elementErrors)?n.errors:n)||{})});throw new Error(JSON.stringify(e))}const{id:a,key:o,self:s}=r;return{id:a,key:o,self:s,authUrl:null}})})},experimentalUnfavouriteSpace:function(e,{spaceKey:n}){return Object(a.a)("/wiki/rest/experimental/relation/user/current/favourite/toSpace/".concat(n),{method:"DELETE"}).then(()=>({spaceKey:n}),e=>{if(e instanceof s.a)return!1;throw e})},experimentalUpdateDRSSettings:function(e,{cloudId:n,settings:t}){return n?t?Object(a.a)("/gateway/api/join-site-service/site/".concat(n,"/domainRestrictedSignupPromotion"),{method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}}).then(()=>({cloudId:n,success:!0})):Promise.reject(new Error("`settings` argument is missing")):Promise.reject(new Error("cloudId is missing."))},experimentalUpdateShortcutLinks:function(e,n){return Object(a.a)("/wiki/rest/ia/1.0/link/batch",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json"}}).then(()=>!0)},experimentalUpdateSiteSignUpSettings:function(e,n){const{cloudId:t,settings:r}=n;return t?r?Object(a.a)("/gateway/api/site/".concat(t,"/signup-settings"),{method:"PUT",body:JSON.stringify(r),headers:{"Content-Type":"application/json"}}).then(()=>n,e=>{if(e instanceof s.a){const n=e.response.json();return n.errors?new Error(n.errors[0].message):n}throw e}):Promise.reject(new Error("`settings` argument is missing")):Promise.reject(new Error("cloudId is missing."))},experimentalUpdateSpaceLogo:function(e,{spaceKey:n,spaceName:t,logoDataURI:r}){return Object(a.a)("/wiki/rest/ia/1.0/space/setLogo",{method:"POST",body:JSON.stringify({spaceKey:n,spaceName:t,logoDataURI:r}),headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(({name:e,logoDownloadPath:t})=>({key:n,name:e,iconPath:t}))},experimentalWatchSpace:function(e,{spaceKey:n}){return n?Object(a.a)("/wiki/rest/api/user/watch/space/".concat(n),{method:"POST",headers:{"Content-Type":"application/json","X-Atlassian-Token":"no-check"}}).then(()=>({key:n,watching:!0})):Promise.reject(new Error("`spaceKey` argument is missing."))},experimentalReopenInlineComment:async function(e,{commentId:n}){let t;try{t=await(await Object(a.a)("/wiki/rest/inlinecomments/1.0/comments/".concat(n,"/resolve/false/dangling/false"),{method:"PUT"})).json()}catch(e){return{result:!1}}return{result:t&&t.resolveProperties&&!t.resolveProperties.resolved}},experimentalSaveFabricComment:function(e,n){const{location:t,contentType:r,contentId:i,adfContent:o,commentId:s,requestType:l,version:c}=n.params,p={id:s||null,ancestors:"replyComment"===l?[{id:s}]:[],body:{atlas_doc_format:{representation:"atlas_doc_format",value:o}},container:{type:r,id:i},extensions:{location:t},type:"comment",version:c};let m,d;switch(l){case"editComment":d="PUT",m="/wiki/rest/api/content/".concat(s,"?expand=container,ancestors,extensions");break;default:d="POST",m="/wiki/rest/api/content?expand=container,ancestors,extensions"}return Object(a.a)(m,{method:d,headers:{Accept:"application/json","Content-Type":"application/json","X-Atlassian-Token":"no-check"},body:JSON.stringify(p)}).then(e=>e.json())},experimentalSaveFabricInlineComment:function(e,n){const{originalSelection:t,matchIndex:r,numMatches:i,serializedHighlights:o,authorDisplayName:l,authorAvatarUrl:c,parentCommentId:p,lastFetchTime:m,contentType:d,contentId:u,adfContent:g,commentId:S,requestType:y}=n.params,h={id:S||null,originalSelection:t,adfContent:g,matchIndex:r,numMatches:i,serializedHighlights:o,authorDisplayName:l,authorAvatarUrl:c,parentCommentId:p,lastFetchTime:m,hasDeletePermission:!0,hasEditPermission:!0,hasResolvePermission:!0,resolveProperties:{resolved:!1,resolvedTime:0},deleted:!1,containerId:u,containerType:d};let x,E;return"edit"===y?(E="PUT",x="/wiki/rest/inlinecomments/1.0/comments/".concat(S)):(E="POST",x="/wiki/rest/inlinecomments/1.0/comments"),Object(a.a)(x,{method:E,headers:{Accept:"application/json","Content-Type":"application/json","X-Atlassian-Token":"no-check"},body:JSON.stringify(h)}).then(e=>({result:e.json()}),e=>{if(e instanceof s.a)return e.response.json().then(e=>({error:e}));throw e})},experimentalSaveFabricInlineReply:function(e,n){const{authorDisplayName:t,authorAvatarUrl:r,parentCommentId:i,contentId:o,adfContent:l,replyId:c,requestType:p,hasDeletePermission:m,hasEditPermission:d,lastModificationDate:u,commentDateUrl:g}=n.params,S={id:c||null,adfContent:l,authorDisplayName:t,authorAvatarUrl:r,commentId:i,hasDeletePermission:m,hasEditPermission:d,lastModificationDate:u,commentDateUrl:g};let y,h;return"edit-reply"===p?(h="PUT",y="/wiki/rest/inlinecomments/1.0/comments/".concat(i,"/replies/").concat(c)):(h="POST",y="/wiki/rest/inlinecomments/1.0/comments/".concat(i,"/replies?containerId=").concat(o)),Object(a.a)(y,{method:h,headers:{Accept:"application/json","Content-Type":"application/json","X-Atlassian-Token":"no-check"},body:JSON.stringify(S)}).then(e=>({result:e.json()}),e=>{if(e instanceof s.a)return e.response.json().then(e=>({error:e}));throw e})},experimentalFileUpload:function(e,n){return Object(a.a)("/wiki/rest/drag-and-drop/1/filestore/upload",{method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json"}}).then(()=>!0)},experimentalMigratePages:function(e,{contentId:n,contentHash:t}){return Object(a.a)("/wiki/rest/api/content/".concat(n,"/convert?hash=").concat(t),{method:"PUT",headers:{"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"}}).catch(_).then(e=>({status:e.status}))}}};var J=t("KD1n"),G=t("H5qd");function q(){const e=Object(J.a)(['\n  directive @experimental on QUERY | MUTATION\n\n  type Query {\n    experimentalAboutConfluence: ExperimentalAboutConfluence\n    experimentalBlueprints(spaceKey: ID!): ExperimentalBlueprints\n    experimentalContentDraftDiff(\n      contentId: String!\n    ): ExperimentalContentDraftDiff\n    experimentalDrsEligibility(cloudId: String!): ExperimentalDRSEligibility\n    experimentalGenerateSpaceKey(\n      spaceName: String!\n    ): ExperimentalGenerateSpaceKey\n    experimentalGetCompleteOnboarding: ExperimentalOnboardingCompletion\n    experimentalKeyboardShortcutsStatus: ExperimentalKeyboardShortcutsStatus\n    experimentalLinkedApplications: ExperimentalApplicationList\n    """\n    Fetches macro specific data, stringified\n    """\n    experimentalMacroMetadata(\n      """\n      The content the macro exists in\n      """\n      contentId: ID!\n      """\n      The node of the macro to fetch metadata for\n      """\n      macroNode: ExperimentalMacroNode!\n    ): ExperimentalMacroPayload\n    experimentalMediaConfig: ExperimentalMediaConfig\n    experimentalPromotedSpaces(\n      promotedSpacesLimit: Int = 10\n      otherSpacesLimit: Int = 10\n      promotedSpaceKey: String = ""\n    ): ExperimentalPromotedSpaces\n    """\n    See also: CCGraphQLSchema : quickReload\n    """\n    experimentalQuickReload(\n      contentId: ID!\n      since: ExperimentalLong!\n    ): ExperimentalQuickReload\n    experimentalRecentContainers(\n      cloudId: String!\n    ): ExperimentalRecentContainerList\n    experimentalSiteSignUpSettings(\n      cloudId: String!\n    ): ExperimentalSiteSignUpSettings\n    experimentalSkipOnboarding: ExperimentalSkipOnboarding\n    experimentalSpace(spaceKey: String!): ExperimentalSpace\n    experimentalSynchronySnapshot(\n      jwt: String\n      url: String\n      entityId: String\n    ): ExperimentalSynchronySnapshot\n    experimentalUserPermissions(cloudId: String!): ExperimentalUserPermissions\n    experimentalCrossProductAdvancedSearch(\n      query: String!\n      scope: String\n      filters: ExperimentalCrossProductSearchFilter\n      searchSession: ExperimentalSearchSessionType\n      first: Int = 25\n      after: String\n    ): ExperimentalCrossProductSearchResult\n    experimentalFetchShareableTeams(\n      queryString: String!\n      limit: Int!\n    ): ExperimentalShareableTeams\n    experimentalResolvedInlineComments(contentId: ID!): ExperimentalComments\n    experimentalContentTypes: ExperimentalContentTypes\n    experimentalEditorBreadcrumbs(contentId: ID!): ExperimentalEditorBreadcrumbs\n    experimentalUploadToken(contentId: ID!): ExperimentalUploadToken\n    experimentalConvertStorageContentToADF(\n      cxhtml: String!\n      contentId: String!\n    ): ExperimentalConvertStorageContentToADF\n    experimentalLongTask(taskId: ID!): ExperimentalLongTask\n  }\n\n  type Mutation {\n    experimentalAddPersonalSpaceLink(spaceUserKey: String!): Boolean\n    experimentalAddCustomizedPersonalSpace(\n      spaceName: String!\n    ): ExperimentalAddCustomizedPersonalSpaceResult\n    experimentalAddSpaceLink(id: String!, spaceKey: String!): Boolean\n    experimentalCompleteOnboarding: ExperimentalOnboardingCompletion\n    experimentalCreateDemoSpace(\n      spaceKey: String!\n      spaceName: String!\n    ): ExperimentalDemoSpace\n    experimentalDeleteComment(contentId: ID!): ExperimentalDeleteComment\n    experimentalDeleteContentVersion(\n      contentId: String!\n      versionNumber: Int!\n    ): Boolean\n    experimentalDisableKeyboardShortcuts: ExperimentalKeyboardShortcutsStatus\n    experimentalEnableKeyboardShortcuts: ExperimentalKeyboardShortcutsStatus\n    experimentalFetchResumeDraftLink(\n      resumeDraftLink: String!\n    ): ExperimentalPublishContentLink\n    experimentalGrantAccess(\n      contentId: String!\n      accessType: String!\n      accountId: String!\n    ): ExperimentalGrantAccess\n    experimentalInviteUser(\n      cloudId: String!\n      email: String!\n      inviteContinueUrl: String!\n    ): ExperimentalUserInvitation\n    experimentalCreateBlankFabricPage(\n      spaceKey: String!\n      parentPage: String\n    ): ExperimentalPublishContentLink\n    experimentalCreateFabricBlogpost(\n      spaceKey: String!\n    ): ExperimentalPublishContentLink\n    experimentalPublishPageAndBlog(\n      spaceKey: String!\n      contentId: String\n      blueprintModuleCompleteKey: String!\n      featureFlags: String!\n    ): ExperimentalPublishContentLink\n    experimentalPublishPageByBlueprint(\n      spaceKey: String!\n      contentId: String\n      blueprint: String\n    ): ExperimentalPublishContentLink\n    experimentalPublishPageByTemplate(\n      spaceKey: String!\n      contentId: String\n      blueprint: String\n      context: String\n      title: String\n    ): ExperimentalPublishContentLink\n    experimentalRemoveSpaceLink(id: String!, spaceKey: String!): Boolean\n    experimentalRequestAccess(\n      contentId: String!\n      accessType: String!\n    ): ExperimentalRequestAccess\n    experimentalRestoreContentVersion(\n      contentId: String!\n      versionNumber: Int!\n      message: String\n    ): ExperimentalContentVersionRestored\n    experimentalSaveComment(\n      params: ExperimentalCommentInput\n    ): ExperimentalCommentMutationResponse\n    experimentalSaveFabricComment(\n      params: ExperimentalFabricCommentInput\n    ): ExperimentalFabricComment\n    experimentalSaveFabricInlineComment(\n      params: ExperimentalFabricInlineCommentInput\n    ): ExperimentalFabricInlineCommentResponse\n    experimentalSaveFabricInlineReply(\n      params: ExperimentalFabricInlineReplyInput\n    ): ExperimentalFabricInlineReplyResponse\n    experimentalSetFeatureDiscovered(\n      pluginKey: String!\n      featureKey: String!\n    ): ExperimentalDiscoveredFeature\n    experimentalSubmitFeedbackCollector(\n      summary: String!\n      component: String!\n      description: String\n    ): ExperimentalJiraIssue\n    experimentalFavouriteSpace(\n      spaceKey: String!\n    ): ExperimentalFavouriteSpaceType\n    experimentalUnfavouriteSpace(\n      spaceKey: String!\n    ): ExperimentalFavouriteSpaceType\n    experimentalUpdateDRSSettings(\n      cloudId: String!\n      settings: ExperimentalDRSSettingsInput\n    ): ExperimentalDRSSettings\n    experimentalUpdateShortcutLinks(\n      spaceKey: String!\n      quickLinks: [ExperimentalSpaceSidebarLink]\n    ): Boolean\n    experimentalUpdateSiteSignUpSettings(\n      cloudId: String!\n      settings: ExperimentalSiteSignUpSettingsInput\n    ): ExperimentalSiteSignUpSettings\n    experimentalUpdateSpaceLogo(\n      spaceKey: String!\n      spaceName: String!\n      logoDataURI: String!\n    ): ExperimentalSpaceLogo\n    experimentalWatchSpace(spaceKey: String!): ExperimentalSpaceWatch\n    experimentalReopenInlineComment(\n      commentId: ID!\n    ): ExperimentalInlineCommentReopened\n    experimentalFileUpload(\n      size: Int!\n      contentType: String!\n      mimeType: String!\n      fileName: String!\n      pageId: String!\n      fileStoreId: String!\n      minorEdit: Boolean\n      renderEditorHTML: Boolean\n      collectionName: String!\n    ): Boolean\n    experimentalMigratePages(\n      contentId: ID!\n      contentHash: String!\n    ): ExperimentalMigratePages\n  }\n\n  type ExperimentalConvertStorageContentToADF {\n    value: String\n  }\n\n  type ExperimentalMigratePages {\n    status: String\n  }\n\n  type ExperimentalContent {\n    ancestors: [ExperimentalContent]\n    body: ExperimentalContentBodyPerRepresentation\n    container: ExperimentalSpaceOrContent\n    history: ExperimentalHistory\n    id: ID\n    links: ExperimentalLinksDownloadEdituiWebuiContextSelfTinyuiCollectionBase\n    operations: [ExperimentalOperationCheckResult]\n    status: String\n    title: String\n    type: String\n    version: ExperimentalVersion\n  }\n\n  type ExperimentalContentBody {\n    content: ExperimentalContent\n    macroRenderedOutput: ExperimentalFormattedBody\n    links: ExperimentalLinksContextBase\n    representation: String\n    value: String\n    webresource: ExperimentalWebResourceDependencies\n  }\n\n  type ExperimentalContentBodyPerRepresentation {\n    editor: ExperimentalContentBody\n    view: ExperimentalContentBody\n  }\n\n  type ExperimentalDeleteComment {\n    statusCode: String\n    contentId: ID\n  }\n\n  type ExperimentalAboutConfluence {\n    html: String!\n  }\n\n  type ExperimentalApplication {\n    applicationType: String\n    id: ID\n    key: String\n    label: String\n    link: String\n    local: Boolean\n    self: Boolean\n  }\n\n  type ExperimentalApplicationList {\n    linkedApplications: [ExperimentalApplication]\n  }\n\n  type ExperimentalBlueprint {\n    blueprintModuleCompleteKey: String\n    contentBlueprintId: String\n    createResult: String\n    description: String\n    howToUseTemplate: String\n    iconURL: String\n    isNew: Boolean\n    isPromoted: Boolean\n    itemModuleCompleteKey: String\n    name: String\n    new: Boolean\n    promoted: Boolean\n    skipHowToUse: Boolean\n    styleClass: String\n    templateId: String\n    wizard: ExperimentalBlueprintWizard\n  }\n\n  type ExperimentalBlueprintWizard {\n    pages: [ExperimentalBlueprintWizardPage]\n  }\n\n  type ExperimentalBlueprintWizardPage {\n    descriptionContent: String\n    descriptionHeader: String\n    descriptionHeaderLink: String\n    id: String\n    last: Boolean\n    templateKey: String\n    title: String\n  }\n\n  type ExperimentalBlueprints {\n    nodes: [ExperimentalBlueprint]\n  }\n\n  type ExperimentalEditorBreadcrumbs {\n    breadcrumbs: [ExperimentalEditorBreadcrumb]\n  }\n\n  type ExperimentalEditorBreadcrumb {\n    title: String\n    url: String\n  }\n\n  input ExperimentalCaptcha {\n    id: String\n    response: String\n  }\n\n  input ExperimentalCommentInput {\n    contentId: ID!\n    commentId: ID\n    requestType: String!\n    html: String!\n    watch: Boolean!\n    uuid: String!\n    captcha: ExperimentalCaptcha\n  }\n\n  input ExperimentalCommentVersion {\n    number: Int\n  }\n\n  input ExperimentalFabricCommentInput {\n    location: String!\n    contentId: String!\n    contentType: String!\n    adfContent: String!\n    commentId: String\n    requestType: String!\n    version: ExperimentalCommentVersion\n  }\n\n  input ExperimentalFabricInlineCommentInput {\n    contentId: ID!\n    contentType: String!\n    adfContent: String!\n    commentId: ID\n    requestType: String!\n    originalSelection: String!\n    serializedHighlights: String!\n    numMatches: Int\n    matchIndex: Int\n    authorDisplayName: String!\n    authorAvatarUrl: String!\n    parentCommentId: ID\n    lastFetchTime: String\n  }\n\n  input ExperimentalFabricInlineReplyInput {\n    parentCommentId: ID!\n    contentId: ID!\n    replyId: ID\n    adfContent: String!\n    requestType: String!\n    authorDisplayName: String!\n    authorAccountId: String!\n    authorAvatarUrl: String!\n    hasDeletePermission: Boolean!\n    hasEditPermission: Boolean!\n    lastModificationDate: String\n    commentDateUrl: String\n  }\n\n  type ExperimentalCommentMutationResponse {\n    asyncRenderSafe: Boolean\n    html: String\n    id: ID\n    isInlineComment: Boolean\n    ownerId: ID\n    parentId: ID\n  }\n\n  type ExperimentalContainer {\n    title: String\n    id: ID\n    status: String\n    type: String\n    macroRenderedOutput: ExperimentalFormattedBody\n  }\n\n  type ExperimentalExtension {\n    location: String\n  }\n\n  type ExperimentalFabricComment {\n    id: ID\n    ancestors: [ExperimentalFabricComment]\n    container: ExperimentalContainer\n    extensions: ExperimentalExtension\n  }\n\n  type ExperimentalFabricInlineCommentResponse {\n    result: ExperimentalFabricInlineComment\n    error: ExperimentalFabricInlineCommentError\n  }\n\n  type ExperimentalFabricInlineReplyResponse {\n    result: ExperimentalFabricInlineReply\n    error: ExperimentalFabricInlineReplyError\n  }\n\n  type ExperimentalFabricInlineCommentResolveProperties {\n    resolved: Boolean\n    resolvedTime: ExperimentalLong\n    resolvedByDangling: Boolean\n  }\n\n  type ExperimentalFabricInlineComment {\n    id: ID!\n    authorAccountId: String!\n    authorAvatarUrl: String!\n    authorDisplayName: String!\n    authorUserName: String!\n    body: String\n    hasDeletePermission: Boolean!\n    hasEditPermission: Boolean!\n    hasReplyPermission: Boolean!\n    hasResolvePermission: Boolean!\n    lastModificationDate: String!\n    commentDateUrl: String!\n    markerRef: String!\n    parentCommentId: ID!\n    originalSelection: String!\n    resolveProperties: ExperimentalFabricInlineCommentResolveProperties\n  }\n\n  type ExperimentalFabricInlineReply {\n    id: ID!\n    authorAccountId: String\n    authorAvatarUrl: String!\n    authorDisplayName: String!\n    authorUserName: String\n    body: String\n    hasDeletePermission: Boolean!\n    hasEditPermission: Boolean!\n    lastModificationDate: String!\n    commentDateUrl: String!\n    commentId: ID!\n  }\n\n  type ExperimentalFabricInlineCommentError {\n    errorId: String\n    message: String!\n  }\n\n  type ExperimentalFabricInlineReplyError {\n    errorId: String\n    message: String!\n  }\n\n  type ExperimentalContentDraftDiff {\n    body: String\n  }\n\n  type ExperimentalContentVersionRestored {\n    restored: Boolean!\n  }\n\n  type ExperimentalDRSEligibility {\n    isAdmin: Boolean\n    isEligible: Boolean\n  }\n\n  type ExperimentalDRSSettings {\n    cloudId: String\n    success: Boolean\n  }\n\n  input ExperimentalDRSSettingsInput {\n    action: String!\n    domain: String\n    domains: [String]\n    promotionLocation: String!\n  }\n\n  type ExperimentalDemoSpace {\n    draftId: ID\n    key: String\n  }\n\n  type ExperimentalDiscoveredFeature {\n    featureKey: String\n    pluginKey: String\n  }\n\n  type ExperimentalExpandable {\n    relationData: String\n    source: String\n    target: String\n  }\n\n  type ExperimentalGenerateSpaceKey {\n    key: String\n  }\n\n  type ExperimentalGrantAccess {\n    responseStatus: String\n    success: Boolean!\n  }\n\n  type ExperimentalGroup {\n    type: String\n    name: String\n    links: String\n    content: String\n    value: String\n  }\n\n  type ExperimentalJiraIssue {\n    authUrl: String\n    id: ID\n    key: String\n    self: String\n  }\n\n  type ExperimentalKeyboardShortcutsStatus {\n    enabled: Boolean\n  }\n\n  type ExperimentalLinks {\n    base: String\n    self: String\n  }\n\n  """\n  A simplified version of the macro\'s ADF node\n  """\n  input ExperimentalMacroNode {\n    """\n    The type of macro\n    """\n    extensionKey: String!\n    extensionType: String!\n    """\n    The type of macro\n    """\n    parameters: ExperimentalMacroParameters!\n    """\n    The type of ADF node\n    """\n    type: String!\n  }\n\n  input ExperimentalMacroParameters {\n    macroMetadata: String!\n    macroParams: String!\n  }\n\n  """\n  The metadata payload for a given macro\n  """\n  type ExperimentalMacroPayload {\n    """\n    The metadata payload stringified\n    """\n    payload: String\n    contentId: String\n  }\n\n  type ExperimentalMediaConfig {\n    clientId: String!\n    fileStoreUrl: String!\n  }\n\n  type ExperimentalOnboardingCompletion {\n    complete: Boolean\n  }\n\n  type ExperimentalPromotedSpace {\n    id: String\n    text: String\n  }\n\n  type ExperimentalPromotedSpaces {\n    nodes: [ExperimentalPromotedSpace]\n  }\n\n  type ExperimentalPublishContent {\n    draftUrl: String\n  }\n\n  type ExperimentalPublishContentLink {\n    links: ExperimentalPublishContent\n  }\n\n  """\n  See also: CCGraphQLSchema : Long\n  """\n  scalar ExperimentalLong\n\n  """\n  See also: CCGraphQLSchema : QuickReload\n  """\n  type ExperimentalQuickReload {\n    time: ExperimentalLong!\n    editorForPage: ExperimentalQuickReloadUser\n    comments: [ExperimentalQuickReloadComment!]!\n  }\n\n  """\n  See also: CCGraphQLSchema : QuickReloadComment\n  """\n  type ExperimentalQuickReloadComment {\n    comment: ExperimentalQuickReloadCommentComment\n  }\n\n  """\n  See also: CCGraphQLSchema : Comment\n  """\n  type ExperimentalQuickReloadCommentComment {\n    id: ID!\n    author: ExperimentalQuickReloadUser!\n  }\n\n  """\n  See also: CCGraphQLSchema : Person\n  """\n  type ExperimentalQuickReloadUser {\n    displayName: String\n    accountId: ID\n  }\n\n  type ExperimentalRecentContainer {\n    iconUrl: String\n    id: ID\n    name: String\n    objectId: String\n    type: String\n    url: String\n  }\n\n  type ExperimentalRecentContainerList {\n    recentContainers: [ExperimentalRecentContainer]\n  }\n\n  type ExperimentalRelation {\n    name: String\n    target: String\n    source: String\n    relationData: String\n    _expandable: ExperimentalExpandable\n    _links: ExperimentalLinks\n  }\n\n  type ExperimentalRelations {\n    results: [ExperimentalRelation]\n    start: Int\n    limit: Int\n    size: Int\n    context: String\n    _links: ExperimentalLinks\n  }\n\n  type ExperimentalRequestAccess {\n    complete: Boolean!\n    fullName: String\n  }\n\n  type ExperimentalSiteSignUpSettings {\n    openInvite: Boolean\n    selfJoinMode: String\n    notifyAdmin: Boolean\n    domains: [String]\n    isDefault: Boolean\n  }\n\n  input ExperimentalSiteSignUpSettingsInput {\n    openInvite: Boolean!\n    selfJoinMode: String!\n    notifyAdmin: Boolean!\n    domains: [String]!\n  }\n\n  type ExperimentalSkipOnboarding {\n    completedJiraOnboarding: Boolean\n    isFirstSpaceCreated: Boolean\n  }\n\n  type ExperimentalTaskMessage {\n    translation: String!\n    args: [String]!\n  }\n\n  type ExperimentalTaskName {\n    key: String!\n    args: [String]\n  }\n\n  type ExperimentalTaskLinks {\n    base: String\n    context: String\n  }\n\n  type ExperimentalLongTask {\n    id: ID!\n    name: ExperimentalTaskName\n    elapsedTime: Int\n    percentageComplete: Int\n    successful: Boolean!\n    _links: ExperimentalTaskLinks\n    messages: [ExperimentalTaskMessage!]!\n  }\n\n  type ExperimentalSpace {\n    statusCode: Int!\n  }\n\n  type ExperimentalSpaceLogo {\n    key: String\n    name: String\n    iconPath: String\n  }\n\n  type ExperimentalSpaceProperty {\n    key: String\n    value: String\n    version: ExperimentalSpacePropertyVersion\n  }\n\n  type ExperimentalSpacePropertyVersion {\n    number: Int\n  }\n\n  type ExperimentalSpaceWatch {\n    key: String\n    watching: Boolean\n  }\n\n  type ExperimentalSuggestLabel {\n    href: String\n    className: String\n    name: String\n  }\n\n  type ExperimentalSynchronySnapshot {\n    title: String\n    adf: String\n  }\n\n  type ExperimentalUser {\n    id: String\n    accountId: ID\n    profilePicture: ExperimentalIcon\n    displayName: String\n    email: String\n    detailsPosition: String\n    detailsDepartment: String\n    detailsLocation: String\n    currentUserCanFollow: Boolean\n    currentUserIsFollowing: Boolean\n    hasExperimentalKnownUseralSpace: Boolean\n    hasBlog: Boolean\n  }\n\n  type ExperimentalUserInvitation {\n    email: String\n    results: ExperimentalUserInvitationResults\n    userId: ID\n  }\n\n  type ExperimentalUserInvitationResults {\n    conf: ExperimentalUserInvitationResult\n  }\n\n  type ExperimentalUserPermissions {\n    canAddProducts: Boolean\n    canInviteUsers: Boolean\n  }\n\n  type ExperimentalVersion {\n    by: ExperimentalKnownUser\n    collaborators: [ExperimentalKnownUser]\n    confRev: String\n    friendlyWhen: String\n    message: String\n    minorEdit: Boolean\n    number: Int\n    when: String\n  }\n\n  type ExperimentalFormattedBody {\n    links: ExperimentalLinksContextBase\n    representation: String\n    value: String\n    webresource: ExperimentalWebResourceDependencies\n  }\n\n  type ExperimentalHistory {\n    createdBy: ExperimentalKnownUser\n    createdDate: String\n    lastUpdated: ExperimentalVersion\n    latest: Boolean\n    links: ExperimentalLinksContextSelfBase\n  }\n\n  type ExperimentalIcon {\n    height: Int\n    isDefault: Boolean\n    path(type: ExperimentalPathType = RELATIVE_NO_CONTEXT): String!\n    width: Int\n  }\n\n  type ExperimentalKnownUser {\n    accountId: String\n    type: String\n    displayName: String\n    links: ExperimentalLinksContextSelfBase\n    operations: [ExperimentalOperationCheckResult]\n    profilePicture: ExperimentalIcon\n  }\n\n  type ExperimentalLinksContextBase {\n    base: String\n    context: String\n  }\n\n  type ExperimentalLinksContextSelfBase {\n    base: String\n    context: String\n    self: String\n  }\n\n  type ExperimentalLinksDownloadEdituiWebuiContextSelfTinyuiCollectionBase {\n    base: String\n    collection: String\n    context: String\n    download: String\n    editui: String\n    self: String\n    tinyui: String\n    webui: String\n  }\n\n  type ExperimentalOperationCheckResult {\n    links: ExperimentalLinksContextBase\n    operation: String\n    targetType: String\n  }\n\n  enum ExperimentalPathType {\n    ABSOLUTE\n    RELATIVE\n    RELATIVE_NO_CONTEXT\n  }\n\n  type ExperimentalSpaceOrContent {\n    ancestors: [ExperimentalContent]\n    body: ExperimentalContentBodyPerRepresentation\n    container: ExperimentalSpaceOrContent\n    history: ExperimentalHistory\n    homepage: ExperimentalContent\n    homepageId: ID\n    icon: ExperimentalIcon\n    id: ID\n    key: String\n  }\n\n  input ExperimentalSpaceSidebarLink {\n    title: String\n    url: String\n    id: ID\n    resourceType: String\n    resourceId: String\n  }\n\n  type ExperimentalSuperBatchWebResources {\n    links: ExperimentalLinksContextBase\n    metatags: String\n    tags: ExperimentalWebResourceTags\n    uris: ExperimentalWebResourceUris\n  }\n\n  enum ExperimentalUserInvitationResult {\n    INVITED\n    INVITED_PENDING_APPROVAL\n    PENDING_INVITE_EXISTS\n    USER_EXISTS\n    PRODUCT_ADDED\n    PRODUCT_EXISTS\n  }\n\n  type ExperimentalWebResourceDependencies {\n    contexts: [String]\n    keys: [String]\n    links: ExperimentalLinksContextBase\n    superbatch: ExperimentalSuperBatchWebResources\n    tags: ExperimentalWebResourceTags\n    uris: ExperimentalWebResourceUris\n  }\n\n  type ExperimentalWebResourceTags {\n    css: String\n    data: String\n    js: String\n  }\n\n  type ExperimentalWebResourceUris {\n    css: [String]\n    data: [String]\n    js: [String]\n  }\n\n  input ExperimentalSearchSessionType {\n    sessionId: String!\n    referrerId: String\n  }\n\n  input ExperimentalCrossProductSearchFilter {\n    spaceKeys: [String]\n    contributors: [String]\n    date: ExperimentalCrossProductSearchFilterDate\n  }\n\n  input ExperimentalCrossProductSearchFilterDate {\n    from: String\n    to: String\n  }\n\n  type ExperimentalCrossProductSearchResult {\n    nodes: [ExperimentalCrossProductSearchResultItem]\n    pageInfo: ExperimentalPageInfo\n    abTest: ExperimentalAbTest\n  }\n\n  type ExperimentalCrossProductSearchResultItem {\n    title: String\n    url: String\n    entityType: String\n    excerpt: String\n    lastModified: String\n    content: ExperimentalCrossProductSearchResultItemContent\n    space: ExperimentalCrossProductSearchResultItemSpace\n  }\n\n  type ExperimentalCrossProductSearchResultItemContent {\n    id: ID\n    type: String\n    space: ExperimentalCrossProductSearchResultItemSpace\n  }\n\n  type ExperimentalCrossProductSearchResultItemSpace {\n    key: String\n    name: String\n    icon: ExperimentalIcon\n    links: ExperimentalCrossProductSearchResultItemSpaceLinks\n  }\n\n  type ExperimentalCrossProductSearchResultItemSpaceLinks {\n    webui: String\n  }\n\n  type ExperimentalPageInfo {\n    hasNextPage: Boolean\n    endCursor: String\n    totalCount: Int\n  }\n\n  type ExperimentalAbTest {\n    abTestId: String\n    controlId: String\n    experimentId: String\n  }\n\n  type ExperimentalAddCustomizedPersonalSpaceResult {\n    result: Boolean\n  }\n\n  type ExperimentalShareableTeamNode {\n    id: String\n    description: String\n    displayName: String\n    includesYou: Boolean\n    memberCount: Int\n    largeAvatarImageUrl: String\n    largeHeaderImageUrl: String\n    smallAvatarImageUrl: String\n    smallHeaderImageUrl: String\n  }\n\n  type ExperimentalShareableTeams {\n    nodes: [ExperimentalShareableTeamNode]\n  }\n\n  type ExperimentalComments {\n    nodes: [ExperimentalComment!]!\n  }\n\n  type ExperimentalComment {\n    id: ID!\n    body: String!\n    author: ExperimentalUser!\n    friendlyLastModified: String!\n    replies: ExperimentalComments!\n    location: ExperimentalInlineComment\n  }\n\n  type ExperimentalInlineComment {\n    hasResolvePermission: Boolean!\n    resolveProperties: ExperimentalResolveProperties!\n    inlineMarkerRef: String!\n    inlineText: String!\n  }\n\n  type ExperimentalResolveProperties {\n    resolvedUser: String!\n    resolvedFriendlyDate: String!\n    resolvedByDangling: Boolean!\n  }\n\n  type ExperimentalInlineCommentReopened {\n    result: Boolean!\n  }\n\n  type ExperimentalContentTypes {\n    nodes: [ExperimentalContentType]\n  }\n\n  type ExperimentalContentType {\n    value: String\n    label: String\n  }\n\n  type ExperimentalFavouriteSpaceType {\n    spaceKey: String\n  }\n\n  type ExperimentalMediaToken {\n    value: String!\n  }\n\n  type ExperimentalMediaPickerUserToken {\n    id: String!\n    token: String!\n  }\n\n  type ExperimentalUploadToken {\n    token: ExperimentalMediaToken!\n    configuration: ExperimentalMediaConfig!\n    collection: String!\n    mediaPickerUserToken: ExperimentalMediaPickerUserToken\n  }\n']);return q=function(){return e},e}const Q=t.n(G)()(q());t.d(n,"getSchemaLink",(function(){return W}));let V=null;function W(){return V||(V=new r.a({schema:Object(i.makeExecutableSchema)({typeDefs:Q,resolvers:M,resolverValidationOptions:{requireResolversForResolveType:!1}}),context:{}}))}},"7uJl":function(e,n,t){var r=t("V3uQ"),i=t("dw5g"),a=/[&<>"']/g,o=RegExp(a.source);e.exports=function(e){return(e=i(e))&&o.test(e)?e.replace(a,r):e}},O1Sc:function(e,n,t){var r=t("w2Tz"),i=t("y4bl"),a=t("xoyU");e.exports=function(e,n,t){for(var o=-1,s=n.length,l={};++o<s;){var c=n[o],p=r(e,c);t(p,c)&&i(l,a(c,e),p)}return l}},QwI6:function(e,n,t){var r=t("O1Sc"),i=t("NW/2");e.exports=function(e,n){return r(e,n,(function(n,t){return i(e,t)}))}},V3uQ:function(e,n,t){var r=t("+a2B")({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});e.exports=r},Wb2A:function(e,n,t){"use strict";(function(e){t.d(n,"a",(function(){return a}));var r=t("pkwY"),i=t("kC4U");function a(n,{cloudId:t}){const r=e.env.ACTIVITY_SERVICE,a="/api/client/recent/containers?cloudId=".concat(t),s="".concat(r?"https://".concat(r):"").concat(a);return Object(i.a)(s,{method:"GET","Content-Type":"application/json"}).then(e=>e.text()).catch(e=>e).then(e=>{try{return JSON.parse(e).data}catch(e){return[]}}).then((e=[])=>({recentContainers:e.map(o),__typename:"ExperimentalRecentContainerList"}))}function o(e={}){return Object(r.a)({id:e.objectId},e,{__typename:"ExperimentalRecentContainer"})}}).call(this,t("F63i"))},y4bl:function(e,n,t){var r=t("c72w"),i=t("xoyU"),a=t("pnw1"),o=t("tQYX"),s=t("Ypsa");e.exports=function(e,n,t,l){if(!o(e))return e;for(var c=-1,p=(n=i(n,e)).length,m=p-1,d=e;null!=d&&++c<p;){var u=s(n[c]),g=t;if(c!=m){var S=d[u];void 0===(g=l?l(S,u,d):void 0)&&(g=o(S)?S:a(n[c+1])?[]:{})}r(d,u,g),d=d[u]}return e}}}]);
//# sourceMappingURL=experimental-schema~b59ad437.LGjrRAsz-v39.js.map